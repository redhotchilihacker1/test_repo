import pandas as pd
from openpyxl import load_workbook
from openpyxl.styles import PatternFill, Font, Alignment
from openpyxl.utils import get_column_letter
import sys

# Kullanıcıdan dosya yolunu ve kaydedilecek dosya adını al
if len(sys.argv) != 3:
    print("Kullanım: python script.py <input.nessus> <output_filename>")
    sys.exit(1)

nessus_file = sys.argv[1]
output_filename = sys.argv[2]

# Verileri pandas ile yükle
df = pd.read_excel(f'{output_filename}.xlsx')

# Yeni excel dosyasını openpyxl ile aç
wb = load_workbook(f'{output_filename}.xlsx')
ws = wb.active

# Başlıkları kalın ve ortalı yap
header_font = Font(bold=True)
center_alignment = Alignment(horizontal='center', vertical='center')

for col in ws.iter_cols(min_row=1, max_row=1, min_col=1, max_col=ws.max_column):
    for cell in col:
        cell.font = header_font
        cell.alignment = center_alignment

# Hücre genişliklerini ayarla
for col in ws.columns:
    max_length = 0
    column_letter = get_column_letter(col[0].column)  # Sütun harfini al
    for cell in col:
        if cell.value:
            max_length = max(max_length, len(str(cell.value)))
    adjusted_width = max_length + 2
    ws.column_dimensions[column_letter].width = adjusted_width

# Koşullu biçimlendirme (renklendirme) için
fill_low = PatternFill(start_color="ADD8E6", end_color="ADD8E6", fill_type="solid")      # Mavi
fill_medium = PatternFill(start_color="FFA500", end_color="FFA500", fill_type="solid")    # Koyu turuncu
fill_high = PatternFill(start_color="FF0000", end_color="FF0000", fill_type="solid")      # Kırmızı
fill_critical = PatternFill(start_color="800000", end_color="800000", fill_type="solid")  # Bordo

# Metinlerin sığması için wrap_text aktif et
for row in ws.iter_rows(min_row=2, max_row=ws.max_row, min_col=1, max_col=ws.max_column):
    for cell in row:
        cell.alignment = Alignment(wrap_text=True)

# Risk faktörüne göre renklendirme
for row in ws.iter_rows(min_row=2, max_row=ws.max_row):
    risk_factor_cell = row[ws.max_column - 1]  # Risk Factor sütununu bul (son sütun)
    risk_factor_value = risk_factor_cell.value
    
    if risk_factor_value == 'Low':
        risk_factor_cell.fill = fill_low
    elif risk_factor_value == 'Medium':
        risk_factor_cell.fill = fill_medium
    elif risk_factor_value == 'High':
        risk_factor_cell.fill = fill_high
    elif risk_factor_value == 'Critical':
        risk_factor_cell.fill = fill_critical

# Düzenlenmiş XLSX dosyasını kaydet
adjusted_xlsx_output = f'{output_filename}_styled.xlsx'
wb.save(adjusted_xlsx_output)

print(f"Biçimlendirilmiş XLSX kaydedildi: {adjusted_xlsx_output}")
